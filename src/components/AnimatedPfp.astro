---
---

<div id="pfp-container" style={`--size: ${Astro.props.size}`}>
  <div id="bg" />
  <div id="rect" />

  <div class="tri-r" id="c1-2" style="grid-area: 1 / 2" />
  <div class="tri-r" id="c1-3" style="grid-area: 1 / 3" />
  <div class="tri-l" id="c1-4" style="grid-area: 1 / 4" />

  <div class="tri-r" id="c2-2" style="grid-area: 2 / 2" />
  <div class="tri-t" id="c2-4" style="grid-area: 2 / 4" />

  <div class="tri-r" id="c3-2" style="grid-area: 3 / 2" />

  <div class="tri-b" id="c4-1" style="grid-area: 4 / 1" />
  <div class="tri-b" id="c4-2" style="grid-area: 4 / 2" />
  <div class="tri-b" id="c4-3" style="grid-area: 4 / 3" />
  <div class="tri-b" id="c4-4" style="grid-area: 4 / 4" />
</div>

<style lang="sass">
  #pfp-container
    display: grid
    height: var(--size)
    width: var(--size)
    grid-template: repeat(4, 1fr) / repeat(4, 1fr)
    flex-shrink: 0

    :not(#bg)
      background: #c2f1ff
      // layering gets weird when transitioning, so explicitly move stuff in front
      // of #bg so it always shows behind the others
      // this is mostly a problem with #rect
      z-index: 1
    
  #bg
    background: #6db4d5
    grid-area: 1 / 1 / span 4 / span 4
    transform: translateX(-50%) scaleX(0)
    
  #rect
    grid-area: 1 / 1 / span 3 / 1
    transform: translateY(-50%) scaleY(0)
  
  .tri-r, .tri-b
    clip-path: polygon(100% 100%, 0 100%, 100% 0)
  
  .tri-l, .tri-t
    clip-path: polygon(0 0, 0 100%, 100% 0)

  .tri-l
    transform: translateX(-50%) scaleX(0)
  
  .tri-t
    transform: translateY(-50%) scaleY(0)
  
  .tri-r
    transform: translateX(50%) scaleX(0)
  
  .tri-b
    transform: translateY(50%) scaleY(0)
</style>

<noscript><style is:inline>
  #container * { transform: "none" !important; }
</style></noscript>

<script>
  import { EASE } from "crossani";

  for (const elem of document.querySelectorAll("#pfp-container *"))
    elem.transitions = [
      {
        state: { transform: "none" },
        ms: 600,
        easing: EASE.cubicBezier(0.16, 1, 0.3, 1),
      },
    ];

  const $ = document.querySelector.bind(document);

  setTimeout(() => {
    $("#bg").doTransition(0);
    
    setTimeout(() => {
      $("#rect").doTransition(0);
      $("#c1-2").doTransition(0);
      $("#c4-1").doTransition(0);
    }, 100);

    setTimeout(() => {
      $("#c1-3").doTransition(0);
      $("#c2-2").doTransition(0);
      $("#c4-2").doTransition(0);
    }, 150);

    setTimeout(() => {
      $("#c1-4").doTransition(0);
      $("#c4-3").doTransition(0);
      $("#c3-2").doTransition(0);
      $("#c2-4").doTransition(0);
    }, 200);

    setTimeout(() => {
      $("#c4-4").doTransition(0)
    }, 250);
  }, 1000);
</script>