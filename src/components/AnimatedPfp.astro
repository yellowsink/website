---
---

<div id="pfp-container" style={`--size: ${Astro.props.size}`}>
	<div id="bg"></div>
	<div id="rect"></div>

	<div class="tri-r" id="c1-2" style="grid-area: 1 / 2"></div>
	<div class="tri-r" id="c1-3" style="grid-area: 1 / 3"></div>
	<div class="tri-l" id="c1-4" style="grid-area: 1 / 4"></div>

	<div class="tri-r" id="c2-2" style="grid-area: 2 / 2"></div>
	<div class="tri-t" id="c2-4" style="grid-area: 2 / 4"></div>

	<div class="tri-r" id="c3-2" style="grid-area: 3 / 2"></div>

	<div class="tri-b" id="c4-1" style="grid-area: 4 / 1"></div>
	<div class="tri-b" id="c4-2" style="grid-area: 4 / 2"></div>
	<div class="tri-b" id="c4-3" style="grid-area: 4 / 3"></div>
	<div class="tri-b" id="c4-4" style="grid-area: 4 / 4"></div>
</div>

<style lang="sass">
	#pfp-container
		@apply grid grid-rows-4 grid-cols-4 shrink-0
		height: var(--size)
		width: var(--size)

		> *
			@apply transition-property-transform transition-duration-600 transition-ease-[cubic-bezier(0.16,1,0.3,1)]

		:not(#bg)
			// layering gets weird when transitioning, so explicitly move stuff in front
			// of #bg so it always shows behind the others
			// this is mostly a problem with #rect
			@apply bg-#c2f1ff z-1

	#bg
		background: #6db4d5
		grid-area: 1 / 1 / span 4 / span 4
		transform: translateX(-50%) scaleX(0)

	#rect
		grid-area: 1 / 1 / span 3 / 1
		transform: translateY(-50%) scaleY(0)

	.tri-r, .tri-b
		clip-path: polygon(100% 100%, 0 100%, 100% 0)

	.tri-l, .tri-t
		clip-path: polygon(0 0, 0 100%, 100% 0)

	.tri-l
		transform: translateX(-50%) scaleX(0)

	.tri-t
		transform: translateY(-50%) scaleY(0)

	.tri-r
		transform: translateX(50%) scaleX(0)

	.tri-b
		transform: translateY(50%) scaleY(0)

	#c1-2
		background: #d60270 !important

	#c2-2
		background: #9b4f96 !important

	#c3-2
		background: #0038a8 !important
</style>

<noscript><style is:inline> #pfp-container * { transform: none !important; } </style></noscript>

<script>
	const $ = (sel: string) => (document.querySelector(sel) as HTMLDivElement).style.transform = "none";

	setTimeout(() => {
		$("#bg");

		setTimeout(() => {
			$("#rect");
			$("#c1-2");
			$("#c4-1");
		}, 100);

		setTimeout(() => {
			$("#c1-3");
			$("#c2-2");
			$("#c4-2");
		}, 150);

		setTimeout(() => {
			$("#c1-4");
			$("#c4-3");
			$("#c3-2");
			$("#c2-4");
		}, 200);

		setTimeout(() => {
			$("#c4-4");
		}, 250);
	}, 1000);
</script>
